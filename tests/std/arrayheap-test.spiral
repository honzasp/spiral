(program
  (import std)
  (import std.test)
  (import std.arrayheap)
  (import std.array)

  (test "arrayheap?" (lambda (t)
    (assert t (arrayheap? (arrayheap-new -)))
    (assert-not t (arrayheap? "not an arrayheap"))))

  (test "arrayheap-empty?" (lambda (t)
    (let ((ah-1 (arrayheap-new -)))
      (assert t (arrayheap-empty? ah-1))
      (arrayheap-insert! ah-1 10)
      (assert-not t (arrayheap-empty? ah-1)))))

  (test "arrayheap-len" (lambda (t)
    (let ((ah-1 (arrayheap-new -)))
      (arrayheap-insert! ah-1 10)
      (arrayheap-insert! ah-1 20)
      (arrayheap-insert! ah-1 15)
      (arrayheap-insert! ah-1 5)
      (assert-eqv t (arrayheap-len ah-1) 4))))

  (test "arrayheap-minimum" (lambda (t)
    (let ((ah-1 (arrayheap-new -)))
      (arrayheap-insert! ah-1 10)
      (arrayheap-insert! ah-1 15)
      (arrayheap-insert! ah-1 5)
      (arrayheap-insert! ah-1 20)
      (assert-eqv t (arrayheap-minimum ah-1) 5))))

  (test "arrayheap-remove-minimum!" (lambda (t)
    (let ((ah-1 (arrayheap-new -)))
      (arrayheap-insert! ah-1 10)
      (arrayheap-insert! ah-1 15)
      (arrayheap-insert! ah-1 5)
      (arrayheap-insert! ah-1 20)
      (arrayheap-insert! ah-1 35)
      (arrayheap-insert! ah-1 25)
      (assert-eqv t (arrayheap-remove-minimum! ah-1) 5)
      (assert-eqv t (arrayheap-remove-minimum! ah-1) 10)
      (assert-eqv t (arrayheap-remove-minimum! ah-1) 15)
      (assert-eqv t (arrayheap-remove-minimum! ah-1) 20))))

  (test "arrayheap-from-array" (lambda (t)
    (var a0 (array-new))
    (array-push! a0 10)
    (array-push! a0 15)
    (array-push! a0 30)
    (array-push! a0 5)
    (array-push! a0 8)
    (array-push! a0 40)
    (array-push! a0 20)
    (var h0 (arrayheap-from-array - a0))
    (assert-eqv t (arrayheap-remove-minimum! h0) 5)
    (assert-eqv t (arrayheap-remove-minimum! h0) 8)
    (assert-eqv t (arrayheap-remove-minimum! h0) 10)
    (assert-eqv t (arrayheap-remove-minimum! h0) 15)
    (assert-eqv t (arrayheap-remove-minimum! h0) 20)
    (assert-eqv t (arrayheap-remove-minimum! h0) 30)
    (assert-eqv t (arrayheap-remove-minimum! h0) 40)
    (assert t (arrayheap-empty? h0))))

  (test "heapsort!" (lambda (t)
    (var a0 (array-new))
    (array-push! a0 8)
    (array-push! a0 2)
    (array-push! a0 6)
    (array-push! a0 9)
    (array-push! a0 3)
    (array-push! a0 1)
    (array-push! a0 7)
    (array-push! a0 4)
    (array-push! a0 0)
    (array-push! a0 5)
    (heapsort! - a0)
    (do ((i 0 (+ i 1)))
        ((>= i 10))
      (assert-eqv t (array-get a0 i) i)))))
