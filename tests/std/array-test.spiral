(program
  (import std)
  (import std.array)
  (import std.test)

  (test "array?" (lambda (t)
    (assert t (array? (array-new)))
    (assert-not t (array? "not an array"))
    (assert-not t (array? 100))))

  (test "array-len" (lambda (t)
    (var a (array-new))
    (array-push! a 10)
    (array-push! a 20)
    (assert-eq t (array-len a) 2)
    (array-pop! a)
    (assert-eq t (array-len a) 1)
    (array-pop! a)
    (assert-eq t (array-len a) 0)))

  (test "array-get" (lambda (t)
    (var a (array-new))
    (array-push! a 100)
    (array-push! a 200)
    (array-push! a 300)
    (assert-eq t (array-get a 0) 100)
    (assert-eq t (array-get a 1) 200)
    (assert-eq t (array-get a 2) 300)))

  (test "array-set!" (lambda (t)
    (var a (array-new))
    (array-push! a 10)
    (array-push! a 20)
    (array-push! a 40)
    (array-push! a 80)
    (array-set! a 1 200)
    (array-set! a 2 400)
    (assert-eq t (array-get a 0) 10)
    (assert-eq t (array-get a 1) 200)
    (assert-eq t (array-get a 2) 400)
    (assert-eq t (array-get a 3) 80)))

  (test "array-first" (lambda (t)
    (var a (array-new))
    (array-push! a 1)
    (array-push! a 2)
    (array-push! a 4)
    (array-push! a 8)
    (assert-eq t (array-first a) 1)
    (array-set! a 0 100)
    (assert-eq t (array-first a) 100)))

  (test "array-last" (lambda (t)
    (var a (array-new))
    (array-push! a 1)
    (array-push! a 2)
    (array-push! a 4)
    (array-push! a 8)
    (assert-eq t (array-last a) 8)
    (array-set! a 3 800)
    (assert-eq t (array-last a) 800)))

  (test "array-each" (lambda (t)
    (var a (array-new))
    (array-push! a 2)
    (array-push! a 3)
    (array-push! a 5)
    (array-push! a 8)
    (array-push! a 1)
    (array-push! a 6)
    (var b (array-new))
    (array-each a (lambda (x)
      (when (== 0 (mod x 2))
        (array-push! b x))
      true))
    (assert-eq t (array-len b) 3)
    (assert-eq t (array-get b 0) 2)
    (assert-eq t (array-get b 1) 8)
    (assert-eq t (array-get b 2) 6)))

  (test "array-empty?" (lambda (t)
    (assert t (array-empty? (array-new)))
    (var a (array-new))
    (array-push! a 10)
    (assert-not t (array-empty? a))
    (array-pop! a)
    (assert t (array-empty? a)))))
