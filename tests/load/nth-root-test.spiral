(program
  (import std)
  (import std.math)
  (import std.test)

  (var min-del 0.000001)
  (fun root (n a)
    (fun iter (x)
      (var b (/ a (power (- n 1) x)))
      (var x-del (/ (- b x) n))
      (if (< (abs x-del) min-del) x (iter (+ x x-del))))
    (iter (* a 1.0)))
  (fun power (n a)
    (cond
      ((== n 0) 1)
      ((== n 1) a)
      ((== (mod n 2) 0) (square (power (div n 2) a)))
      (true (* a (square (power (div n 2) a))))))
  (fun square (a) (* a a))

  (var eps 0.00001)
  (test "powers" (lambda (t) 
    (assert-near-eq t eps (power 2 10) 100)
    (assert-near-eq t eps (power 3 2) 8)
    (assert-near-eq t eps (power 1 33) 33)))
  (test "roots" (lambda (t)
    (assert-near-eq t eps (root 3 1000) 10)
    (assert-near-eq t eps (root 2 49) 7)
    (assert-near-eq t eps (root 4 256) 4)))
  (test "powered roots" (lambda (t)
    (assert-near-eq t eps (power 2 (root 2 2)) 2)
    (assert-near-eq t eps (power 3 (root 3 100)) 100)
    (assert-near-eq t eps (power 2 (root 2 13)) 13)
    (assert-near-eq t 0.01 (power 5 (root 5 12345)) 12345))))
