(program
  (import std)
  (import std.array)
  (import std.test)

  (fun make-prime-gen ()
    (var primes (array-new))
    (lambda ()
      (fun find-next-prime (x)
        (fun check-prime (i)
          (var p (array-get primes i))
          (cond
            ((> (* p p) x) true)
            ((== (mod x p) 0) false)
            (true (check-prime (+ 1 i)))))
        (if (check-prime 1) x (find-next-prime (+ 2 x))))
      (cond
        ((== (array-len primes) 0)
          (array-push! primes 2) 2)
        ((== (array-len primes) 1)
          (array-push! primes 3) 3)
        (true 
          (var next-prime (find-next-prime (+ 2 (array-last primes))))
          (array-push! primes next-prime)
          next-prime))))

  (test "prime generator" (lambda (t)
    (var gen (make-prime-gen))
    (assert-eq t (gen) 2)
    (assert-eq t (gen) 3)
    (assert-eq t (gen) 5)
    (assert-eq t (gen) 7)
    (assert-eq t (gen) 11)
    (assert-eq t (gen) 13)
    (assert-eq t (gen) 17)
    (assert-eq t (gen) 19)
    (assert-eq t (gen) 23)
    (assert-eq t (gen) 29)
    (assert-eq t (gen) 31))))
